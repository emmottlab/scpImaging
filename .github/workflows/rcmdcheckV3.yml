name: R Check Multi-OS (with Sys Deps)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  R-CMD-check:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        r-version: ['4.1.1'] # Using R 4.1.1

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} (R ${{ matrix.r-version }})

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}
          use-public-rspm: true

      # <<<--- ADD SYSTEM DEPENDENCY INSTALLATION STEPS --->>>
      - name: Install Linux system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            gfortran \
            libgit2-dev

      - name: Install macOS system dependencies
        if: runner.os == 'macOS'
        run: |
          brew install libgit2 # Others often pre-installed or handled differently

      - name: Install Windows system dependencies (using Rtools4 bash)
        if: runner.os == 'Windows'
        shell: msys2 {0} # Use the bash shell provided by Rtools4
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed \
            mingw-w64-x86_64-curl \
            mingw-w64-x86_64-openssl \
            mingw-w64-x86_64-libxml2 \
            mingw-w64-x86_64-gcc-fortran \
            mingw-w64-x86_64-libgit2

      # Now run setup-r-dependencies, which should find system libs installed above
      - name: Install R dependencies (CRAN, Bioc) using pak
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            local::.
            any::rcmdcheck
          needs: check

      - name: Check package
        env:
           R_CLI_NUM_COLORS: 0
           _R_CHECK_CRAN_INCOMING_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: always() # Keep for debugging
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-r${{ matrix.r-version }}-check-results
          path: check
