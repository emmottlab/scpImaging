name: R Check Multi-OS (with Bioconductor)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  R-CMD-check:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # R 4.1.1 corresponds to Bioc 3.14
        r-version: ['4.1.1']
        bioc-version: ['3.14']
        # If adding other R versions, pair with appropriate Bioc versions:
        # include:
        #   - { os: ubuntu-latest, r-version: 'release', bioc-version: 'release' }
        #   - { os: windows-latest, r-version: 'release', bioc-version: 'release' }
        #   - { os: macos-latest, r-version: 'release', bioc-version: 'release' }
        #   - { os: ubuntu-latest, r-version: '4.1.1', bioc-version: '3.14'}

    runs-on: ${{ matrix.os }}
    # Include Bioc version in name for clarity
    name: ${{ matrix.os }} (R ${{ matrix.r-version }}, Bioc ${{ matrix.bioc-version }})

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}
          use-public-rspm: true

      - name: Install dependencies (CRAN, Bioc, System)
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          # Add Bioconductor version specification
          bioc-version: ${{ matrix.bioc-version }}
          extra-packages: |
            # Tell pak/setup-r-dependencies to install deps for the local package (.)
            local::.
            # Ensure rcmdcheck is installed
            any::rcmdcheck
          needs: check

      # REMOVED: install.packages("remotes", "rcmdcheck") step
      # REMOVED: remotes::install_deps step

      - name: Check package
        env:
           R_CLI_NUM_COLORS: 0
           _R_CHECK_CRAN_INCOMING_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: always() # Keep for debugging
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-r${{ matrix.r-version }}-bioc${{ matrix.bioc-version }}-check-results
          path: check
