% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imageProcessing.R
\name{overlayMask}
\alias{overlayMask}
\title{'overlayMask()' Overlay Segmentation Mask on Image}
\usage{
overlayMask(
  image_path,
  mask_path,
  output_path,
  mode = c("outline", "overlay"),
  outline_col = "cyan",
  outline_lwd = 2,
  overlay_col = "yellow",
  overlay_alpha = 0.4
)
}
\arguments{
\item{image_path}{Path to the original microscopy image (*.png).}

\item{mask_path}{Path to the segmentation mask image (*.png).
Expected to be binary or label image where background is black (intensity 0)
and segmented regions are non-black.}

\item{output_path}{Path to save the resulting composite image (PNG format).}

\item{mode}{Character string: "outline" or "overlay". Determines the visualization style.}

\item{outline_col}{Color for the outlines (used if mode="outline"). Can be any
format recognized by \code{magick} (e.g., "cyan", "#00FFFF"). Default is "cyan".}

\item{outline_lwd}{Approximate line width (thickness) for outlines in pixels
(used if mode="outline"). Default is 2.}

\item{overlay_col}{Color for the overlay (used if mode="overlay"). Can be any
format recognized by \code{magick}. Default is "yellow".}

\item{overlay_alpha}{Alpha transparency for the overlay (used if mode="overlay").
A numeric value between 0 (fully transparent) and 1 (fully opaque). Default is 0.4.}
}
\value{
Invisibly returns the \code{output_path} where the composite image was saved.
}
\description{
Reads a microscopy image and a corresponding segmentation mask,
then creates an output image showing the mask as either outlines or a
semi-transparent overlay on the original image.
}
\examples{
\dontrun{
# Requires the 'magick' package
if (requireNamespace("magick", quietly = TRUE)) {
  # Create dummy files for example
  img <- magick::image_blank(width=100, height=100, color="grey")
  mask <- magick::image_blank(width=100, height=100, color="black")

  # Draw a white circle on the mask using magick's drawing capabilities
  mask <- magick::image_draw(mask)
  graphics::symbols(50, 50, circles=25, inches=FALSE, add=TRUE, fg="white", bg="white")
  grDevices::dev.off() # Close the drawing device opened by image_draw

  img_path <- tempfile(fileext = ".png")
  mask_path <- tempfile(fileext = ".png")
  out_outline <- tempfile(fileext = ".png")
  out_overlay <- tempfile(fileext = ".png")

  magick::image_write(img, img_path)
  magick::image_write(mask, mask_path)

  # Generate outline version
  overlayMask(img_path, mask_path, out_outline, mode = "outline",
               outline_col = "lime", outline_lwd = 3)
  print(paste("Outline image saved to:", out_outline))

  # Generate overlay version
  overlayMask(img_path, mask_path, out_overlay, mode = "overlay",
               overlay_col="magenta", overlay_alpha = 0.6)
  print(paste("Overlay image saved to:", out_overlay))

  # Optional: View the first image if running interactively
  # if(interactive()) print(magick::image_read(out_outline))

  # Clean up temporary files
  file.remove(img_path, mask_path, out_outline, out_overlay)
} else {
  message("Magick package not installed. Example cannot run.")
}
}
}
