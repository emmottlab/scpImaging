% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{cleanFilenames}
\alias{cleanFilenames}
\title{'cleanFilenames()': Clean Hyperlink Formatting from DataFrame Columns}
\usage{
cleanFilenames(
  data,
  column_names,
  prefix_pattern = "^=HYPERLINK\\\\(\\"",
  suffix_pattern = "\\"\\\\)$"
)
}
\arguments{
\item{data}{A \code{data.frame} containing the columns to be cleaned.}

\item{column_names}{A character vector specifying the names of the columns
in \code{data} that need to be cleaned.}

\item{prefix_pattern}{A character string containing a regular expression
for the prefix to be removed from the start of the strings in the
specified columns. Defaults to \code{'^=HYPERLINK\\\\("'}.}

\item{suffix_pattern}{A character string containing a regular expression
for the suffix to be removed from the end of the strings in the
specified columns. Defaults to \code{'"\\\\)$'}.}
}
\value{
A \code{data.frame} with the specified formatting removed from the
target columns. Columns not specified or not of character type (after a
warning) will remain unchanged.
}
\description{
This function removes specified prefix and suffix patterns,
typically hyperlink formatting (e.g., from Excel), from character columns
within a data frame.
}
\details{
The function iterates through each column specified in \code{column_names}.
For each column:
\enumerate{
\item It first checks if the column is of character type. If not, a warning
is issued for that column, and it is skipped (returned as is).
\item If it is a character column, it sequentially applies two \code{gsub}
operations:
\itemize{
\item Removes the \code{prefix_pattern} from the beginning of
each string.
\item Removes the \code{suffix_pattern} from the end of each string
(from the result of the prefix removal).
}
}
The default patterns are designed to clean strings like
\code{"=HYPERLINK(\\"path/to/file.jpg\\")"} into \code{"path/to/file.jpg"}.
}
\examples{
if (requireNamespace("dplyr", quietly = TRUE)) {
  cDat_example <- data.frame(
    ID = 1:3,
    ImageFile = c('=HYPERLINK("image1.png")',
                  'plain_file.jpg',
                  '=HYPERLINK("image2.tif")'),
    Background = c('=HYPERLINK("bg1.png")',
                   '=HYPERLINK("bg2.jpg")',
                   'no_hyperlink_here'),
    Notes = c("Note1", "=HYPERLINK(\"doc1.pdf\")", "Note3"),
    NumericCol = c(10,20,30),
    FactorCol = factor(c("A", "B", "A")),
    stringsAsFactors = FALSE
  )

  # Clean 'ImageFile' and 'Background' columns with default patterns
  cleaned_data1 <- cleanFilenames(cDat_example,
                                  column_names = c("ImageFile", "Background"))
  print("Cleaned ImageFile and Background:")
  print(cleaned_data1)

  # Clean 'Notes' column with default patterns
  cleaned_data_notes <- cleanFilenames(cDat_example, column_names = "Notes")
  print("Cleaned Notes:")
  print(cleaned_data_notes)

}
#' @importFrom dplyr mutate across all_of
}
